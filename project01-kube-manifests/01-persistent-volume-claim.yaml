apiVersion: v1
# https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#persistentvolumeclaim-v1-core
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  # this will be used in the  mysql-deployment.yaml when creating the PVC for the volume that will be bound to the pod.
  ## this is also nused in teh volume snapshot yaml to point to the source (this pvc)
spec: 
#https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#PersistentVolumeClaimSpec
#https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#persistentvolumeclaimspec-v1-core
  accessModes:
    - ReadWriteOnce
  storageClassName: standard-rwo
  # kubectl get storageclass "standard-rwo"
  resources: 
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#resourcerequirements-v1-core
    requests:
      storage: 4Gi

# NEED FOR PVC
# 1. Dynamic volume provisioning allows storage volumes to be created 
# on-demand. 

# dynamic volume provisioning allows for storage to be provisioned on demand

# 2. Without dynamic provisioning, cluster administrators have to manually 
# make calls to their cloud or storage provider to create new storage 
# volumes, and then create PersistentVolume objects to represent them in k8s

# 3. The dynamic provisioning feature eliminates the need for cluster 
# administrators to pre-provision storage. Instead, it automatically 
# provisions storage when it is requested by users.

# 4. PVC: Users request dynamically provisioned storage by including 
# a storage class in their PersistentVolumeClaim

